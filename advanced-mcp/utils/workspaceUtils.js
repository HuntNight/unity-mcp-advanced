/**
 * üîß WORKSPACE UTILITIES - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–±–æ—á–∏–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º
 * 
 * üéØ DRY –ü–†–ò–ù–¶–ò–ü: –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö MCP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
 * –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ workspace root, –ø—É—Ç–∏, –∏ –¥—Ä—É–≥–∏–µ –æ–±—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
 */

import path from 'path';

/**
 * üîß –ü–†–ê–í–ò–õ–¨–ù–û–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï WORKSPACE ROOT
 * 
 * MCP —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –ø–∞–ø–∫–∏ Cursor'–∞, –Ω–æ workspace –¥—Ä—É–≥–æ–π.
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–±—É–µ—Ç —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ workspace.
 * 
 * @returns {string} –ü—É—Ç—å –∫ –∫–æ—Ä–Ω—é workspace
 */
export function getWorkspaceRoot() {
  // üî• –ì–õ–ê–í–ù–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –û–¢ CURSOR!
  if (process.env.WORKSPACE_FOLDER_PATHS) {
    try {
      // WORKSPACE_FOLDER_PATHS –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å JSON –º–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π
      const paths = JSON.parse(process.env.WORKSPACE_FOLDER_PATHS);
      if (Array.isArray(paths) && paths.length > 0) {
        return path.resolve(paths[0]); // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π workspace
      }
    } catch (e) {
      // –ï—Å–ª–∏ –Ω–µ JSON, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—É—Ç—å
      return path.resolve(process.env.WORKSPACE_FOLDER_PATHS);
    }
  }

  // –ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
  return process.env.WORKSPACE_ROOT ||  // –ï—Å–ª–∏ —è–≤–Ω–æ –∑–∞–¥–∞–Ω
    process.env.PWD ||             // Unix-style current directory
    process.env.INIT_CWD ||        // npm/node initial working directory
    process.cwd();                 // Fallback –∫ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
}

/**
 * üîß –ë–ï–ó–û–ü–ê–°–ù–û–ï –†–ê–ó–†–ï–®–ï–ù–ò–ï –ü–£–¢–ò –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–û WORKSPACE
 * 
 * @param {string} relativePath - –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç workspace root
 * @returns {string} –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
 */
export function resolveWorkspacePath(relativePath) {
  return path.resolve(getWorkspaceRoot(), relativePath);
}

/**
 * üîß –ü–û–õ–£–ß–ï–ù–ò–ï –û–¢–ù–û–°–ò–¢–ï–õ–¨–ù–û–ì–û –ü–£–¢–ò –û–¢ WORKSPACE ROOT
 * 
 * @param {string} absolutePath - –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å
 * @returns {string} –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç workspace root
 */
export function getRelativeToWorkspace(absolutePath) {
  return path.relative(getWorkspaceRoot(), absolutePath);
}

/**
 * üîß –ü–†–û–í–ï–†–ö–ê –ß–¢–û –ü–£–¢–¨ –ù–ê–•–û–î–ò–¢–°–Ø –í–ù–£–¢–†–ò WORKSPACE
 * 
 * @param {string} targetPath - –ü—É—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {boolean} true –µ—Å–ª–∏ –ø—É—Ç—å –≤–Ω—É—Ç—Ä–∏ workspace
 */
export function isInsideWorkspace(targetPath) {
  const workspaceRoot = getWorkspaceRoot();
  const relativePath = path.relative(workspaceRoot, targetPath);

  // –ï—Å–ª–∏ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ".." –∑–Ω–∞—á–∏—Ç –æ–Ω –≤–Ω–µ workspace
  return !relativePath.startsWith('..');
}

/**
 * üîß –£–ú–ù–´–ô –ü–û–ò–°–ö GIT –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø
 * 
 * –ò—â–µ—Ç .git –ø–∞–ø–∫—É –Ω–∞—á–∏–Ω–∞—è –æ—Ç workspace root –∏ –ø–æ–¥–Ω–∏–º–∞—è—Å—å –≤–≤–µ—Ä—Ö –ø–æ –¥–µ—Ä–µ–≤—É –ø–∞–ø–æ–∫.
 * –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç git –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ MCP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–µ –∏–∑ –∫–æ—Ä–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
 * 
 * @returns {string} –ü—É—Ç—å –∫ –∫–æ—Ä–Ω—é git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏–ª–∏ workspace root –µ—Å–ª–∏ git –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
export async function findGitRoot() {
  const fs = await import('fs/promises');
  let currentPath = getWorkspaceRoot();

  // –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –≤–≤–µ—Ä—Ö –ø–æ –¥–µ—Ä–µ–≤—É –ø–∞–ø–æ–∫ –∏—â–µ–º .git
  while (currentPath !== path.dirname(currentPath)) { // –ü–æ–∫–∞ –Ω–µ –¥–æ—à–ª–∏ –¥–æ –∫–æ—Ä–Ω—è –¥–∏—Å–∫–∞
    try {
      const gitPath = path.join(currentPath, '.git');
      await fs.access(gitPath);
      return currentPath; // –ù–∞—à–ª–∏ .git –ø–∞–ø–∫—É!
    } catch {
      // .git –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
      currentPath = path.dirname(currentPath);
    }
  }

  // Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º workspace root
  return getWorkspaceRoot();
} 